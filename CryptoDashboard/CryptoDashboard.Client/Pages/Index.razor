@page "/"

@inject ApiService ApiService
@inject NavigationManager NavigationManager

<h3>Cryptocurrency Dashboard</h3>

<EditForm Model="filterModel" OnValidSubmit="OnFilterSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="startDate">Start Date:</label>
        <InputDate id="startDate" class="form-control" @bind-Value="filterModel.StartDate" />
    </div>
    <div class="form-group">
        <label for="endDate">End Date:</label>
        <InputDate id="endDate" class="form-control" @bind-Value="filterModel.EndDate" />
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</EditForm>

@if (cryptoPairs != null)
{
    <h4>Cryptocurrency Pairs</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Pair</th>
                <th>Average Difference</th>
                <th>Lowest Price</th>
                <th>Highest Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pair in cryptoPairs)
            {
                <tr>
                    <td>@pair.PairName</td>
                    <td>@pair.AverageDifference %</td>
                    <td>@pair.LowestPrice</td>
                    <td>@pair.HighestPrice</td>
                    <td>
                        <button @onclick="() => ShowDetails(pair.PairName)">Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private FilterModel filterModel = new FilterModel
        {
            StartDate = new DateTime(2020, 1, 1),
            EndDate = new DateTime(2020, 1, 31)
        };
    private List<CryptoPairViewModel> cryptoPairs;

    private async Task OnFilterSubmit()
    {
        cryptoPairs = await ApiService.GetCryptoPairsAsync(filterModel.StartDate, filterModel.EndDate);
    }

    private void ShowDetails(string pairName)
    {
        NavigationManager.NavigateTo($"/crypto-detail/{pairName}");
    }

    private class FilterModel
    {
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    }
}
